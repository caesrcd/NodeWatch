#!/usr/bin/env bash

./check_install
[ "$?" -ne 1 ] || exit 1

if tmux has-session -t nodewatch 2>/dev/null; then
    tmux -2 attach-session -t nodewatch
    exit 0
fi

SCRIPT_PATH=$(readlink -f "$0")
SCRIPT_DIR=$(dirname "$SCRIPT_PATH")
CONFIG_FILE="$SCRIPT_DIR/config.env"

if [ -f "$CONFIG_FILE" ]; then
    BITCOIN_DATADIR=$(awk -F '=' '/^BITCOIN_DATADIR=/ {last=$2} END {print last}' "$CONFIG_FILE")
    FEES_FORECAST=$(awk -F '=' '/^FEES_FORECAST=/ {last=$2} END {print last}' "$CONFIG_FILE")
    IOSTAT_DEVICE=$(awk -F '=' '/^IOSTAT_DEVICE=/ {printf "%s,", $2}' "$CONFIG_FILE" | sed 's/,$//')
    SIZE_SCREEN=$(awk -F '=' '/^SIZE_SCREEN=/ {last=$2} END {print last}' "$CONFIG_FILE")
fi
if [ -z "$FEES_FORECAST" ]; then
    FEES_FORECAST="smart"
elif [ "$FEES_FORECAST" == "auto" ]; then
    FEES_FORECAST=$(shuf -e "smart" "median" "mempool" -n 1)
fi

[ -z "$BITCOIN_DATADIR" ] && BITCOIN_DATADIR="~/.bitcoin"
if [ ! -f "$BITCOIN_DATADIR/debug.log" ]; then
    echo "The debug.log file not found. Verify that the Bitcoin directory path is correct."
    exit 1
fi

[ -z "$IOSTAT_DEVICE" ] && IOSTAT_DEVICE=$(df $BITCOIN_DATADIR | awk 'NR==2 {print $1}')
n_devices=$(echo "$IOSTAT_DEVICE" | tr ',' '\n' | wc -l)

if [ -n "$SIZE_SCREEN" ]; then
    cols=$(echo "$SIZE_SCREEN" | awk -F 'x' '{print $1}')
    lines=$(echo "$SIZE_SCREEN" | awk -F 'x' '{print $2}')
else
    cols=$(tput cols)
    lines=$(( $(tput lines) + $n_devices ))
fi

if [ $cols -lt 150 -o $lines -lt 27 ]; then
    echo "Resize the terminal screen. Requires a minimum of 150 columns and 27 rows."
    exit 1
fi

netinfo_arg=3
if [ $lines -lt 30 -o $cols -lt 168 ]; then
    netinfo_arg=0
elif [ $cols -lt 190 ]; then
    netinfo_arg=1
fi

msgpreload=$(printf 'Loading\u2026')

TMUX_CMD="tmux new-session -s nodewatch \
    \"echo $msgpreload;watch -c -n 5 -t bitcoin-cli -rpcwait -getinfo -color=always\" \; \
    set-option status off \; bind-key -n z detach-client \; bind-key -n q kill-session \; \
    resize-window -x $cols -y $lines \; \
    split-window -v -l $(( $lines - 13 )) \"echo $msgpreload;sleep 0.5;watch -c -n 30 -t $SCRIPT_DIR/price_alarm/start.sh\" \; \
    split-window -t 0 -h -l $(( $cols - 45 )) \"multitail --config $SCRIPT_DIR/multitail/config -D -cS bitcoin $BITCOIN_DATADIR/debug.log\" \; \
    send-keys C-m \; \
    split-window -t 2 -h -l $(( $cols - 78 )) \"echo $msgpreload;watch -n 3 -t bitcoin-cli -rpcwait -netinfo $netinfo_arg\" \; "

[ $lines -ge 42 ] && TMUX_CMD+="split-window -t 2 -v -l $(( $lines - 28 )) \"$SCRIPT_DIR/htop/start.sh\" \; "
[ $lines -ge 31 -a $lines -le 41 ] && iostat_target=2
[ $lines -ge $(( 44 + $n_devices + 1 )) ] && iostat_target=3
[ -n "$iostat_target" ] && TMUX_CMD+="split-window -t $iostat_target -v -l $(( $n_devices + 3 )) \"iostat -d -x -s -k --human -p $IOSTAT_DEVICE 2\" \; "

TMUX_CMD+="split-window -t 2 -h -l 18 \"echo $msgpreload;watch -n 30 -t -c 'bash -c \\\"\\$SCRIPT_DIR/estimate_fee/start.sh \\$FEES_FORECAST\\\"'\" \; \
    select-pane -t 1"

eval $TMUX_CMD
